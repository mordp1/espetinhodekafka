apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: "file"
  labels:
    strimzi.io/cluster: kafka-connect-staging
spec:
  class: org.apache.kafka.connect.file.FileStreamSinkConnector 
  tasksMax: 1
  config:
    tasks.max: "1"
    file: "/tmp/file.txt"
    topics: "ap-con-debezium-test.inventory.customers"
    key.converter: "io.apicurio.registry.utils.converter.AvroConverter"
    key.converter.apicurio.registry.url: "http://apicurioregistry-service.kafka.svc.cluster.local:8080/"
    key.converter.apicurio.registry.converter.serializer: "io.apicurio.registry.utils.serde.AvroKafkaSerializer"
    key.converter.apicurio.registry.converter.deserializer: "io.apicurio.registry.utils.serde.AvroKafkaDeserializer"
    key.converter.apicurio.registry.global-id": "io.apicurio.registry.utils.serde.strategy.GetOrCreateIdStrategy"
    value.converter: "io.apicurio.registry.utils.converter.AvroConverter"
    value.converter.apicurio.registry.url: "http://apicurioregistry-service.kafka.svc.cluster.local:8080/"
    value.converter.apicurio.registry.converter.serializer: "io.apicurio.registry.utils.serde.AvroKafkaSerializer"
    value.converter.apicurio.registry.converter.deserializer: "io.apicurio.registry.utils.serde.AvroKafkaDeserializer"
    value.converter.apicurio.registry.global-id: "io.apicurio.registry.utils.serde.strategy.GetOrCreateIdStrategy" 
